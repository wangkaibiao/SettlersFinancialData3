如前面所说的，单姿态估计算法更简单、速度更快。它的理想场景是只有一个人在输入图像或视频的中间。缺点是，如果图像中有多个人，那么来自两个人的关键点可能会被估计为是同一个单一姿势的一部分 - 例如，＃1的左臂和＃2的右膝由该算法确定为属于相同姿势而可能被合并。如果输入图像可能包含多人，则应该使用多姿态估计算法。

我们来看看单姿态估计算法的输入：

输入图像元素 - 包含要预测图像的html元素，例如video或img标签。重要的是，图像或视频元素应该是方形的。
图像比例因子 - 0.2和1之间的数字。默认为0.50。在输入到网络之前的缩放图像比例。将此数字设置得较低可以缩小图像，以牺牲精度为代价加快速度。
水平翻转 - 默认为false。如果姿势应该水平翻转/镜像。对于默认水平翻转（比如网络摄像头）的视频，这应该设置为true，这样返回的姿势方向才正确。
输出步幅 - 必须为32、16或8。默认值为16。在内部，此参数会影响神经网络中图层的高度和宽度。在上层看来，它会影响姿态估计的精度和速度。输出步幅值越低精度越高但速度越慢，数值越高速度越快，但精度越低。查看输出步幅对输出质量的影响的最好方法是尝试使用这个单姿态估计的示例: storage.googleapis.com/tfjs-models…。






让我们看看输入：

输入图像元素 - 与单姿态估计相同
图像比例因子 - 与单姿态估计相同
水平翻转 - 与单姿态估计相同
输出步幅 - 与单姿态估计相同
最大姿势检测 - 整数，默认为5，要检测的姿态的最大数量。
姿势可信度阈值 - 0.0至1.0，默认为0.5。在上层看来，这将控制返回姿势的最低置信度分数。
非最大抑制（NMS）半径 - 以像素为单位的数字。在上层看来，这控制了返回姿势之间的最小距离。该值默认为20，这对大多数情况来说可能是正确的。它应该增加/减少，以滤除不太准确的姿势，但只有在调整姿势置信度分数不够好时使用。